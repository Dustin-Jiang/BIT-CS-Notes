#let show-mainbody(body) = {
  set text(font: ("IBM Plex Sans", "Source Han Sans"), hyphenate: false)

  set par(
    leading: 1.15em,
    first-line-indent: (
      amount: 2em,
      all: true,
    ),
    justify: true,
  )

  show heading.where(level: 2): it => {
    set block(
      above: 1.5em,
      below: 1em,
    )
    it
  }

  body
}

#show: show-mainbody;

= 数据库设计与开发 作业三加分申请

#block(
  table(
    columns: (1fr, 1fr, 1fr),
    stroke: none,
    [08012301], [蒋浩天], [1120231337],
  ),
  width: 60%,
)

== 触发器逻辑设计

在设计预约管理系统数据表时, 设计了触发器用于约束预约时间的合法性, 以确保预约时间段开始时间早于结束时间; 设计了触发器约束预约容量数据, 避免了无效的小于等于 0 的预约容量数据的插入; 设计了触发器约束预约用户, 避免同一用户在已有未完成预约的前提下多次进行预约, 避免资源的浪费.

== 界面设计

=== 层联选择

在使用 Delphi 7 工具设计预约管理系统的界面时, 设计了层联选择的功能, 使得用户在选择预约地点时, 可以根据选择的地点自动更新可选的预约时间段, 提高了用户体验.

用户在使用层联选择界面时, 只需点击希望选择的元素, 界面就将自动更新, 而不需要手动点击 "加载" 按钮, 使得操作更加流畅. 

=== 调试信息面板

在设计界面时, 设计了调试信息面板, 将调试信息输出到面板中, 使得用户在使用系统时, 可以方便地查看调试信息, 以便于和开发人员沟通, 排查问题.

#figure(
  image("assets/CascadeMenu.png", width: 85%),
  caption: "界面设计",
)

=== 动态界面显示

对于不同的用户, 设计了不同的界面显示. 普通用户在登录后, 只能看到预约和取消预约的功能; 工作人员登录后, 则可以管理全部预约信息; 而管理员用户则可以编辑用户权限, 修改管理系统的配置信息. 这样设计的目的是为了提高系统的安全性和可用性, 避免了普通用户误操作.